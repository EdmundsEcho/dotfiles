#!/bin/bash
#----------------
# .tmux.conf
#----------------

### 3 ways to set config
# bind-key
# bind-key -n
# bind-key -r
#
# set and set-option are the same

## prefix key to ctrl+s
unbind C-b
set -g prefix C-s
# send the prefix to client inside window (ala nested sessions)
bind-key -r C-s send-prefix
# -r -> repeat

# Name the window when being created
bind-key C new-window \; command-prompt -p "Name for this new window: " "rename-window '%%'"

# don't rename windows automatically
set-option -g allow-rename off

# Window sequence: send the current window to the end of the window list
# tmux escape + <Shift> left or right arrow key
bind-key T swap-window -t 0
bind-key S-Left swap-window -t -1
bind-key S-Right swap-window -t +1


# Set default terminal
set -g default-terminal "screen-256color"
set-option -g default-shell /usr/local/bin/zsh

# Enable the mouse
set -g mouse on

## Split window into panes
bind-key - split-window -v -c '#{pane_current_path}'
bind-key \ split-window -h -c '#{pane_current_path}'
bind-key / split-window -h -c '#{pane_current_path}'
bind-key c new-window -c '#{pane_current_path}'
#bind-key b break-pane -d
#bind-key C-j choose-tree
#bind K kill-session

# switch panes using Ctr-hjkl without prefix
# Includes coordination wiht vim
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# switch panes using Alt-arrow without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

## Pane resizing
## Fine adjustment (1 or 2 cursor cells per bump)
## -n does not require prefix
bind -n M-h resize-pane -L 2
bind -n M-l resize-pane -R 2
bind -n M-j resize-pane -D 1
bind -n M-k resize-pane -U 1

# Status Bar
# ====================
set-option -g status on

# control/toggle use of status bar
bind-key q set-option status

set -g status-interval 4
set -g status-justify left
set -g status-bg default
set -g status-fg white
set -g status-left ''
set -g status-right-length 85

# Desktop vs portable specific settings
#set -g status-right '#W | %I:%M %p - %a, %h %d '
# Portable computer-specific settings
set -g status-right '#W | Batt: #{battery_icon} #{battery_percentage} #{battery_remain} | %I:%M %p - %a, %h %d '

# Highlighting the active window in status bar
setw -g window-status-current-bg default
setw -g window-status-current-fg default
setw -g window-status-bg default
setw -g window-status-fg white
setw -g window-status-activity-fg default
setw -g window-status-bell-attr blink
setw -g window-status-bell-bg default
setw -g window-status-bell-fg default
#setw -g window-status-format '#[fg=default]#[bg=default] #I #[bg=default]#[fg=black,bold] #W  '
#setw -g window-status-current-format '#[fg=default]#[bg=black,bold] #I #[fg=black,bold]#[bg=default] #W  '
setw -g window-status-format '#[fg=white] ● '
setw -g window-status-current-format '#[fg=colour51] ● '
# clock
#set-window-option -g clock-mode-colour colour64 #green
# --------------
# END status bar

# Tmux ability to influence window size of apps running in pane
setw -g aggressive-resize on

## Relaod the config file manually
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Use vim keybindings in copy mode
setw -g mode-keys vi
set -g @shell_mode 'vi'
# TESTING
# Vi copypaste mode
# set-window-option -g mode-keys vi
# bind-key -T vi-copy 'v' begin-selection
# bind-key -T vi-copy 'y' copy-selection

# TESTING
setw -g xterm-keys on

# The messages {
set -g message-attr bold
# set -g message-fg colour232
# set -g message-bg colour166
set -g message-fg black
set -g message-bg yellow
set -g message-command-fg blue
set -g message-command-bg black

# color of window
set -g window-active-style 'fg=#CCE0B8,bg=#000000' # lowest before black = #010101
set -g window-style 'fg=#CCE0B8,bg=#141414'        # move to white to increase contrast

# color pane borders
set -g pane-active-border-fg colour51
set -g pane-active-border-bg '#000000'
set -g pane-border-fg '#696969'
set -g pane-border-bg '#000000'

# Fix for Sierra
set -g default-shell $SHELL
# TESTING
#set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# Capture when a window comes in and out of focus
set -g focus-events on

# Plugin manager and plugins for Tmux
# Run <prefix> + S-I to install plugins
# =====================================
set -g @plugin 'tmux-plugins/tpm'
# Plugins
# continuous saving and restores tmux sessions
set -g @plugin 'tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-resurrect'
# ... include the neovim sessions
set -g @resurrect-strategy-nvim 'session'

# copy to sytem clipboard
set -g @plugin 'tmux-plugins/tmux-yank'

# other tmux settings that are "sensible"
set -g @plugin 'tmux-plugins/tmux-sensible'

# Other display options for battery-powered cpu
set -g @plugin 'tmux-plugins/tmux-battery'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager
# Keep this line at the very bottom of tmux.conf
# Note: This is a bash script that zsh needs to pass on
run-shell "$HOME/.tmux/plugins/tpm/tpm"
