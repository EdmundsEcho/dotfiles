#!/bin/bash
#--------------------------------------------------------------------------------
# .tmux.conf
# last reviewed: Aug 6, 2020
#--------------------------------------------------------------------------------

### 3 ways to set config
# bind-key
# bind-key -n
# bind-key -r
#
# set and set-option are the same

## prefix key to ctrl+s
unbind C-b
set -g prefix C-s
# send the prefix to client inside window (ala nested sessions)
bind-key -r C-s send-prefix
# -r -> repeat

# Scrollback size
set -g history-limit 10000

# disable wait after escape, so vim is usable
# see fishshell issue: 5894
set-option -sg escape-time 50

# Name the window when being created
bind-key C new-window \; command-prompt -p "Name for this new window: " "rename-window '%%'"

# don't rename windows automatically
set-option -g allow-rename off

# Window sequence: send the current window to the end of the window list
# tmux escape + <Shift> left or right arrow key
bind-key T swap-window -t 0
bind-key S-Left swap-window -t -1
bind-key S-Right swap-window -t +1

# Set default terminal
# NOTE: do not set in the shell app as it will overwrite TERM value
#       set TERM value in either Terminal app or iTerm
# Change the default $TERM to tmux-256color and enable true color
set -g default-terminal "xterm-256color"
# set -g default-terminal "screen-256color"
set -as terminal-overrides ",*256col*:Tc"
set -as terminal-overrides ",xterm*:Tc"
set -as terminal-overrides ",*256col*:RGB"
set -as terminal-overrides ",xterm*:RGB"
set -as terminal-overrides ",*:U8=0"
# set -g default-terminal "tmux-256color"
# set -ga terminal-overrides ",xterm-256color*:Tc"

# set -g default-command /usr/local/bin/fish
# set -g default-shell /usr/local/bin/fish

# If running inside tmux ($TMUX is set), then change the status line to red
%if #{TMUX}
set -g status-bg red
%endif

# No bells at all
set -g bell-action none

# TESTING
# set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
# Enable the mouse
set -g mouse on

## Split window into panes
bind-key "-" split-window -v
# bind-key \ split-window -h
bind-key "/" split-window -h
# bind-key "c" new-window -c
#bind-key b break-pane -d
#bind-key C-j choose-tree
#bind K kill-session

# switch panes using ctr-hjkl without prefix <ctr-c>
# Includes coordination wiht vim
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
#bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# switch panes using Alt-arrow without prefix
bind -n M-Left  select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up    select-pane -U
bind -n M-Down  select-pane -D

## Pane resizing
## Fine adjustment (1 or 2 cursor cells per bump)
## -n does not require prefix
bind -n M-h resize-pane -L 2
bind -n M-l resize-pane -R 2
bind -n M-j resize-pane -D 1
bind -n M-k resize-pane -U 1

# Status Bar
# ====================
set-option -g status on

# control/toggle use of status bar
bind-key q set-option status

set -g status-interval 1
set -g status-justify left
set -g status-bg default
set -g status-fg white
set -g status-left ''
set -g status-right-length 90

# Desktop vs Portable (commands sent to the shell)
if '[[ "$USER" =~ edmund ]]' \
   'set -g status-right "#W | %I:%M %p - %a, %h %d "'
if '[[ "$USER" =~ edmundcape ]]' \
   'set -g status-right "#W | Batt: #{battery_icon} #{battery_percentage} #{battery_remain} | %I:%M %p - %a, %h %d "'

# clock
#set-window-option -g clock-mode-colour colour64 #green
# --------------
# END status bar

# Tmux ability to influence window size of apps running in pane
setw -g aggressive-resize on

## Relaod the config file manually
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# TESTING
set -g @shell_mode 'vi'
# Vi copypaste mode
setw -g mode-keys vi

# TESTING
setw -g xterm-keys on

# Messages
set -g message-style 'fg=black, bg=yellow'
set -g message-command-style 'fg=blue, bg=black'

# Status bar
set -g status-style 'bg=default, fg=white'

## Set window split options, pane borders
set -g pane-active-border-style 'fg=colour51, bg=#000000'
set -g pane-border-style        'fg=#696969, bg=#000000'

## Highlighting the active window in status bar
setw -g window-status-format         '#[fg=white] ●'
setw -g window-status-current-format '#[fg=colour51] ●'

# change the background of inactive windows
#set inactive/active window styles
set -g window-style 'fg=colour247,bg=colour236'
set -g window-active-style 'fg=colour250,bg=black'
# Capture when a window comes in and out of focus
# set -g focus-events on


# Plugin manager and plugins for Tmux
# Run <prefix> + S-I to install plugins
# =====================================
set -g @plugin 'tmux-plugins/tpm'

# Plugins
# continuous saving and restores tmux sessions
set -g @plugin 'tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-resurrect'
# save sessions: frequency
set -g @continuum-save-interval '60'
set -g @resurrect-save 'A'
set -g @resurrect-restore 'R'
# ... include the neovim sessions
set -g @resurrect-strategy-nvim 'session'

# copy to sytem clipboard
set -g @plugin 'tmux-plugins/tmux-yank'

# other tmux settings that are "sensible"
# set -g @plugin 'tmux-plugins/tmux-sensible'

if '[[ "$USER" =~ edmundcape ]]' \
      'set -g @plugin "tmux-plugins/tmux-battery"'
set -g @plugin 'tmux-plugins/tmux-battery'
# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager
# Keep this line at the very bottom of tmux.conf
# Note: This is a bash script that zsh needs to pass on
run-shell "$HOME/.tmux/plugins/tpm/tpm"
