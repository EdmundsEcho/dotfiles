#!/bin/bash
#----------------
# .tmux.conf
#----------------

### 3 ways to set config
# bind-key
# bind-key -n
# bind-key -r
#
# set and set-option are the same

## prefix key to ctrl+s
unbind C-b
set -g prefix C-s

# Name the window when being created
bind-key C new-window \; command-prompt -p "Name for this new window: " "rename-window '%%'"

# Window sequence: send the current window to the end of the window list
bind-key T swap-window -t 0

# send the prefix to client inside window (ala nested sessions)
# -r repeat
bind-key -r C-s send-prefix

# Set default terminal
set -g default-terminal "screen-256color"
set-option -g default-shell /usr/local/bin/zsh

# Enable the mouse
set -g mouse on

## Split window into panes
bind-key - split-window -v -c '#{pane_current_path}'
bind-key \ split-window -h -c '#{pane_current_path}'
bind-key / split-window -h -c '#{pane_current_path}'
bind-key c new-window -c '#{pane_current_path}'
bind-key b break-pane -d
bind-key C-j choose-tree
bind K kill-session
#
## Pane navigation
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
#
## Pane resizing
## Fine adjustment (1 or 2 cursor cells per bump)
## -n does not require prefix
bind -n M-h resize-pane -L 2
bind -n M-l resize-pane -R 2
bind -n M-j resize-pane -D 1
bind -n M-k resize-pane -U 1
#
## Status Bar
set-option -g status on
set -g status-interval 4
#set -g status-justify centre
#set -g status-justify left
set -g status-left ''
#set -g status-right ''
## set the key bindings for the : dialogue at the bottom of the screen
#set -g status-keys "emacs"
set -g status-right-length 85
# Desktop
set -g status-right '#W | %I:%M %p - %a, %h %d '
# Portable computer
# set -g status-right '#W | Batt: #{battery_icon} #{battery_percentage} #{battery_remain} | %I:%M %p - %a, %h %d '
set -g status-bg default
set -g status-fg white
#
## Set window split options
set-option -g pane-active-border-fg green
#set-option -g pane-active-border-bg default
set-option -g pane-border-fg '#696969'
set-option -g pane-border-bg black
#
## Highlighting the active window in status bar
setw -g window-status-current-bg default
setw -g window-status-current-fg default
setw -g window-status-bg default
setw -g window-status-fg white
setw -g window-status-activity-fg default
setw -g window-status-bell-attr blink
setw -g window-status-bell-bg default
setw -g window-status-bell-fg default
#setw -g window-status-format '#[fg=default]#[bg=default] #I #[bg=default]#[fg=black,bold] #W  '
#setw -g window-status-current-format '#[fg=default]#[bg=black,bold] #I #[fg=black,bold]#[bg=default] #W  '
setw -g window-status-format '#[fg=white] ● '
setw -g window-status-current-format '#[fg=green] ● '
# clock
#set-window-option -g clock-mode-colour colour64 #green

# Tmux ability to influence window size of apps running in pane
setw -g aggressive-resize on

## Relaod the config file manually
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

## Configure copy paste to work on OS X
# Use vim keybindings in copy mode
setw -g mode-keys vi
set -g @shell_mode 'vi'

# Setup 'v' to begin selection as in Vim
#bind-key -t vi-copy v begin-selection
#bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
#unbind -t vi-copy Enter
#bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Fix for Sierra
set -g default-shell $SHELL
set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# Plugins and manager for Tmux
# Run <prefix> + S-I to install plugins
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
#set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-yank'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager
# Keep this line at the very bottom of tmux.conf
# Note: This is a bash script that zsh needs to pass on
run-shell "$HOME/.tmux/plugins/tpm/tpm"
